import logging
from cachetools import TTLCache
from aiogram import types

from app.seatable_api.api_auth import check_id_messenger

logger = logging.getLogger(__name__)

# –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (1 —á–∞—Å TTL, –¥–æ 2000 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
user_access_cache = TTLCache(maxsize=2000, ttl=3600)

# –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Ç–µ—Ä—è–ª –¥–æ—Å—Ç—É–ø –∏–∑-–∑–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è
RESTRICTING_MESSAGE = "üö´ –ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –±–æ–ª—å—à–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞. –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å –¥–æ—Å—Ç—É–ø, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."


async def check_user_access(user_id: int) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω, False –µ—Å–ª–∏ –∑–∞–ø—Ä–µ—â–µ–Ω.
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    if user_id in user_access_cache:
        logger.debug(f"Cache hit for user {user_id}")
        return user_access_cache[user_id]

    # –ï—Å–ª–∏ –Ω–µ—Ç –≤ –∫—ç—à–µ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ API
    logger.debug(f"Cache miss for user {user_id}, checking via API...")
    try:
        has_access = await check_id_messenger(str(user_id))
        user_access_cache[user_id] = has_access
        return has_access
    except Exception as e:
        logger.error(f"Error checking user access for {user_id}: {str(e)}")
        return False


async def require_access_decorator(func):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏.
    """

    async def wrapper(message: types.Message, *args, **kwargs):
        user_id = message.from_user.id

        if not await check_user_access(user_id):
            await message.answer(
                "üö´ –ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –±–æ–ª—å—à–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–∏—Å—Ç–µ–º—ã.",
                reply_markup=types.ReplyKeyboardRemove()
            )
            return

        # –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø –µ—Å—Ç—å, –≤—ã–ø–æ–ª–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        return await func(message, *args, **kwargs)

    return wrapper

